3 + 2
setwd("~/Desktop/")
read.csv("file:///C:/Users/Rahul Sapireddy/Desktop/data visuilization/Sacramentorealestatetransactions.csv", sep=",", header=TRUE)
read.csv("file:///C:/Users/Rahul Sapireddy/Desktop/data visuilization/Sacramentorealestatetransactions.csv", sep=",", header=FALSE)
?hist
help.search("histogram")
Sacramentorealestatetransactions$columns
v1$column
read.csv("file:///C:/Users/Rahul Sapireddy/Desktop/data visuilization/Sacramentorealestatetransactions.csv", sep=",", header=TRUE)
v1$column
street$column
D <- read.csv("file:///C:/Users/Rahul Sapireddy/Desktop/data visuilization/Sacramentorealestatetransactions.csv", sep=",", header=TRUE)
D
D$column
D$street
D[D$city=="North Highlands",]
D[D$city=="Sacramento",]
D
D[D$city="NORTH HIGHLANDS",]
D
D[D$state="CA",]
D[D$type="Residenial",]
D[D$city="CA",]
c <- c(1.0,2.0.3.0)
c
b <- c(1,2,3,4)
b
n <- length(b)
n
ones <- rep(1,n1)
ones <- rep(1,n)
ones
ones <- rep(2,n)
ones
ones <- rep(2,2)
ones
ones <- rep(2,6)
ones
b <- c(1,2,3,4)
c <- c(1.0,2.0.3.0)
b <- c(2,3,4,5)
b
a <- cbind(ones, a1, b1, c1)
a <- cbind(1, a1, b1, c1)
b <- c(2,3,4,5)
a <- c(6,7,8,9)
a
b
cbind(a,b)
n = (2,3,4)
n <- c(2,3,4)
s <- c("a","b","c")
b <- c(TRUE, FALSE, TRUE)
DF <- data.frame(n,s,b)
DF
df <- DF
df
DF
df
df
g <- rnorm(100,5,2)
g
X2 <- rnorm(100,15,3)
X3 <- rnorm(100,22,5)
X2
X3
g
g
f1 <- function(x,y){}
f1
f1
f1 <- function(x,y){
x <- c(1,2)
y <- c(3,4)
z <- cbind(x,y)
return(z)
}
f1
z
a <- rnorm(3,2,3)
a <- rnorm(15,0,1)
b <- ifelse(a<.5,1,0)
cbing(a,b)
cbind(a,b)
source(C:\\Users\\Rahul Sapireddy\\Desktop\\r source file)
source(C:\\Users\\Rahul Sapireddy\\Desktop\\r source file\\source.r)
rnorm(10)
rnorm(10)
rnorm(10)
rnorm(20)
hist(rnorm(10))
hist(rnorm(10))
hist(rnorm(100))
hist(rnorm(100))
hist(rnorm(1000000))
hist(rnorm(1000000), col = "grey")
plot(rnorm(100))
plot(rnorm(1000))
plot(rnorm(1000), col = "grey")
plot(rnorm(1000))
grid()
plot(rnorm(1000))
grid()
?rnorm
rnorm(10000)
hist(rnorm(10000))
hist(rnorm(10000, 5))
hist(rnorm(10000, 5,1))
hist(rnorm(10000, 5,100))
hist(rnorm(10000, 5,10000))
X1 <- rnorm(15,0,1)
X2 <- ifelse(X1<.5,1,0)
cbind(X1,X2)
rnorm(15, 0, 1)
plot(rnorm(15, 0, 1))
return(x)
sumTo <- function(number){
x <- 0
for(i in 1:number){
x <- x + i
}
return(x)
}
x <- x + i
x
x <- 1
x
x <- 0
for(i in 1:number){
x <- x + i
}
sumTo <- function(number){
x <- 0
for(i in 1:number){
x <- x + i
}
return(x)
}
sumTo(5)
sumTo(6)
source("C:\Users\Rahul Sapireddy\Desktop\data visuilization\sumTo.R")
source("C:\\Users\\Rahul Sapireddy\\Desktop\\data visuilization\\sumTo.R")
sumTo(5)
sumTo(6)
a <- a + 1
while(a < 6){
print(a)
a <- a + 1
}
a <- 0
while(a < 6){
print(a)
a <- a + 1
}
a <- 1
while(a < 6){
print(a)
a <- a + 1
}
if?
print(s)
s
s <- "null"
if(x > 0){
s <- "positive"
print(s)
} else if(x < 0){
s <- "negative"
print(s)
} else{
s <- "zero"
print(s)
}
x <- 1
s <- "null"
if(x > 0){
s <- "positive"
print(s)
} else if(x < 0){
s <- "negative"
print(s)
} else{
s <- "zero"
print(s)
}
x <- 1
s <- "null"
if(x > 0){
s <- "positive"
print(s)
} else if(x < 0){
s <- "negative"
print(s)
} else{
s <- "zero"
print(s)
}
x <- -1
s <- "null"
if(x > 0){
s <- "positive"
print(s)
} else if(x < 0){
s <- "negative"
print(s)
} else{
s <- "zero"
print(s)
}
x <- 0
s <- "null"
if(x > 0){
s <- "positive"
print(s)
} else if(x < 0){
s <- "negative"
print(s)
} else{
s <- "zero"
print(s)
}
x <- 1
s <- "null"
if(x > 0){
s <- "positive"
print(s)
} else if(x < 0){
s <- "negative"
print(s)
} else{
s <- "zero"
print(s)
}
library(ggplot)
install.package(ggplot2)
install.packages(ggplot2)
installed.packages(ggplot2)
install.package(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot)
library(ggplot2)
plot(mtcars$wt, mtcars$mpg)
qplot(mtcars$wt,mtcars$mpg)
qplot(mtcars$wt,mtcars$mpg)
qplot(mtcars$wt,mtcars$mpg)
ggplot(mtcars,aes(x=wt,y=mpg)) + geom_point()
ggplot(NULL,aes(x=mtcars$wt,y=mtcars$mpg)) + geom_point()
ggplot?
ggplot?
ggplot(NULL,aes(x=mtcars$wt,y=mtcars$mpg)) + geom_point()
ggplot(NULL,aes(x=mtcars$wt,y=mtcars$mpg)) + geom_point()
qplot(pressure$temperature,pressure$pressure,type="l")
plot(pressure$temperature,pressure$pressure,type="l")
plot(pressure$temperature,pressure$pressure,type="l")
points(pressure$temperature,pressure$pressure)
library(ggplot2)
qplot(pressure$temperature,pressure$pressure,geom="line")
barplot(BOD$demand,names.arg=BOD$Time)
ggplot(BOD,aes(x=Time,y=demand))+ geom_bar(stat="identity")
ggplot(BOD,aes(x=Time,y=demand))+ geom_bar(stat="identity")
ggplot(BOD,aes(x=Time,y=demand))+ geom_bar(stat="identity")
barplot(BOD$demand,names.arg=BOD$Time)
barplot(BOD$demand,names.arg=BOD$Time)
barplot(?)
hist(mtcars$mpg)
hist(mtcars$mpg,breaks=10)
plot(ToothGrowth$supp,ToothGrowth$len)
qplot(mpg,data=mtcars,binwidth=4)
qplot(mpg,data=mtcars,binwidth=10)
qplot(mpg,data=mtcars,binwidth=5)
plot(ToothGrowth$supp,ToothGrowth$len)
boxplot(len ~ supp,data =ToothGrowth)
boxplot(len ~ supp + dose, data = ToothGrowth)
library(ggplot2)
qplot(ToothGrowth$supp,ToothGrowth$len,geom="boxplot")
curve(x^3 - 5*x, from=-4, to=4)
curve(myfun(x),from=0,to=20)
myfun <- function(xvar) {
val <- 1/(1 +exp(-xvar + 10))
return(val)
}
curve(myfun(x),from=0,to=20)
myfun <- function(xvar) {
val <- 1/(1 +exp(-xvar + 10))
return(val)
}
curve(myfun(x),from=0,to=20)
curve(1-myfun(x),add = TRUE, col = "red")
myfun <- function(xvar) {
val <- 1/(1 +exp(-xvar + 10))
return(val)
}
curve(myfun(x),from=0,to=20)
curve(1-myfun(x),add = TRUE, col = "red")
ggplot(data.frame(x=c(0, 20)), aes(x=x)) + stat_function(fun=myfun, geom="line")
installed.packages("ggplot2")
installed.package("ggplot2")
installed.packages(ggplot2)
installed.packages("ggplot2")
library(ggplot2)
d <- read.csv("Sacramentorealestatetransactions.csv")
data <- read.csv("Sacramentorealestatetransactions.csv")
installed.packages("ggplot2")
library(ggplot2)
data <- read.csv("Sacramentorealestatetransactions.csv")
D <- read.csv("file:///C:/Users/Rahul Sapireddy/Desktop/data visuilization/Sacramentorealestatetransactions.csv", sep=",", header=TRUE)
D
D <- read.csv("Sacramentorealestatetransactions.csv")
D
D <- read.csv("file:///C:/Users/Rahul Sapireddy/Desktop/data visuilization/Sacramentorealestatetransactions.csv", sep=" ", header=TRUE)
D <- read.csv("file:///C:/Users/Rahul Sapireddy/Desktop/data visuilization/Sacramentorealestatetransactions.csv", sep=".", header=TRUE)
D <- read.csv("file:///C:/Users/Rahul Sapireddy/Desktop/data visuilization/Sacramentorealestatetransactions.csv", sep=",", header=TRUE)
data <- read.csv("BloodPressure.csv")
data <- read.txt("BloodPressure.txt")
mydata <- read.table("C:\\Users\\Rahul Sapireddy\\Desktop\\csv files\\BloodPressure.txt", header=TRUE, sep=",", row.names="id")
mydata <- read.table("C:\\Users\\Rahul Sapireddy\\Desktop\\csv files\\Sacramentorealestatetransactions", header=TRUE, sep=",", row.names="id")
mydata <- read.table("C:\\Users\\Rahul Sapireddy\\Desktop\\csv files\\Sacramentorealestatetransactions.csv", header=TRUE, sep=",", row.names="id")
mydata <- read.table("C:\\Users\\Rahul Sapireddy\\Desktop\\csv files\\Sacramentorealestatetransactions.csv", header=TRUE, sep=",")
mydata
df <- read.table("C:\\Users\\Rahul Sapireddy\\Desktop\\csv files\\BloodPressue.txt",
header = FALSE)
df <- read.table("C:/Users/Rahul Sapireddy/Desktop/csv files/BloodPressue.txt",
header = FALSE)
loadmycsv <- read.csv("C:\\Users\\Rahul Sapireddy\\Desktop\\ML\\Prod.csv", stringsAsFactors = FALSE)
install.packages(c("pillar", "Rcpp", "rlang", "stringi", "stringr", "viridisLite"))
loadmycsv <- read.csv("C:\\Users\\Rahul Sapireddy\\Desktop\\ML\\Prod.csv", stringsAsFactors = FALSE)
loadmycsv <- read.csv("C:\\Users\\Rahul Sapireddy\\Desktop\\Prod.csv", stringsAsFactors = FALSE)
loadmycsv <- read.csv("S:\\Prod.csv", stringsAsFactors = FALSE)
loadmycsv <- read.csv("C:\\Users\\Rahul Sapireddy\\Desktop\\Prod.csv", stringsAsFactors = FALSE)
loadmycsv <- read.csv("C:\\Users\\Rahul Sapireddy\\Desktop\\ML\\Prod_inv.csv", stringsAsFactors = FALSE)
loadmycsv <- read.csv("C:\\Users\\Rahul Sapireddy\\Desktop\\ML\\Prod_inv.csv", stringsAsFactors = FALSE)
loadmycsv
boxplot(loadmycsv$Inventory)
boxplot(loadmycsv$Inventory, main = "My Chart")
boxplot(loadmycsv$Inventory, main = "My Chart", ylab = "Inventory (x10 lbs)")
boxplot(loadmycsv$Price, main = "My Chart", ylab = "Price ($$)")
boxplot(loadmycsv$Price, main = "My Chart", ylab = "Price ($$)", xlab = "My x axis")
hist(loadmycsv$Inventory)
hist(loadmycsv$Inventory, main = "My Chart")
hist(loadmycsv$Inventory, main = "My Chart", xlab = "Inventory (x 10 lbs)")
hist(loadmycsv$Price, main = "My Chart", xlab = "Price ($$)")
print(Hello world!)
print(Hello world!);
print("Hello world!")
setwd("C:/Users/Rahul Sapireddy/Desktop/ML Files")
install.packages('ggplot2')
library(ggplot2)
install.packages('ggplot2')
install.packages("ggplot2")
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsofExperience, y = training_set$Salary), colour = 'red') +
geom_line(aes(x = training_set$YearsofExperience, y = predict(regressor, newdata = training_set)), colour = 'blue') +
ggtitle('Years of Experience vs Salary') +
xlab('Years of Experience') +
ylab('Salary')
setwd("C:/Users/Rahul Sapireddy/Desktop/ML Files")
ggplot() +
geom_point(aes(x = training_set$YearsofExperience, y = training_set$Salary), colour = 'red') +
geom_line(aes(x = training_set$YearsofExperience, y = predict(regressor, newdata = training_set)), colour = 'blue') +
ggtitle('Years of Experience vs Salary') +
xlab('Years of Experience') +
ylab('Salary')
dataset = read.csv('Salary_Data.csv')
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# formula -> dependeent variaBle expressed as a linear combination of independent variable
regressor = lm(formula = Salary ~ YearsExperience, data = training_set)
y_pred = predict(regressor, newdata = test_set)
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsofExperience, y = training_set$Salary), colour = 'red') +
geom_line(aes(x = training_set$YearsofExperience, y = predict(regressor, newdata = training_set)), colour = 'blue') +
ggtitle('Years of Experience vs Salary') +
xlab('Years of Experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = training_set$YearsofExperience, y = training_set$Salary), colour = 'red')
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsofExperience, y = training_set$Salary), colour = 'red') +
geom_line(aes(x = training_set$YearsofExperience, y = predict(regressor, newdata = training_set)), colour = 'blue') +
ggtitle('Years of Experience vs Salary (Training Set)') +
xlab('Years of Experience') +
ylab('Salary')
# Simple Linear Regression
# Importing the dataset
dataset = read.csv('Salary_Data.csv')
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting Simple Linear Regression to the Training set
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
# Visualising the Training set results
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
# Visualising the Test set results
library(ggplot2)
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Test set)') +
xlab('Years of experience') +
ylab('Salary')
View(training_set)
View(training_set)
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary), colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)), colour = 'blue') +
ggtitle('Years of Experience vs Salary (Training Set)') +
xlab('Years of Experience') +
ylab('Salary')
library(ggplot2)
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary), colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)), colour = 'blue') +
ggtitle('Years of Experience vs Salary (Training Set)') +
xlab('Years of Experience') +
ylab('Salary')
